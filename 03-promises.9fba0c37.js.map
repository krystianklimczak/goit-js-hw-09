{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAQC,SAASC,cAAc,uBAC/BC,EAAOF,SAASC,cAAc,sBAC9BE,EAASH,SAASC,cAAc,wBAChCG,EAAMJ,SAASC,cAAc,uBAEnC,IAAII,EACAC,EACAC,EAEJ,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAChCC,EAAU,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACLP,EACFK,EAAQ,qBAAqBP,QAAeC,OAE5CO,EAAO,oBAAoBR,QAAeC,MAAU,GAErDA,EAAM,IAGPC,EACFG,EAAQK,MAAKC,IACXC,EAAAxB,GAASyB,OAAOC,QAAQH,EAAO,IAGjCN,EAAQU,OAAMC,IACZJ,EAAAxB,GAASyB,OAAOI,QAAQD,EAAM,G,CAKpC1B,EAAM4B,iBAAiB,SAASC,IAC9BvB,EAAawB,SAASD,EAAEE,OAAOC,MAAM,IAEvC7B,EAAKyB,iBAAiB,SAASC,IAC7BtB,EAAYuB,SAASD,EAAEE,OAAOC,MAAM,IAEtC5B,EAAOwB,iBAAiB,SAASC,IAC/BrB,EAAcsB,SAASD,EAAEE,OAAOC,MAAM,IAGxC3B,EAAIuB,iBAAiB,SAASC,IAC5BA,EAAEI,iBACF,IAAIC,EAAY5B,EAChB,IAAK,IAAI6B,EAAI,EAAGA,GAAK3B,EAAa2B,IAChC1B,EAAc0B,EAAGD,GACjBA,GAAa3B,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst delay = document.querySelector('input[name=\"delay\"]');\nconst step = document.querySelector('input[name=\"step\"]');\nconst amount = document.querySelector('input[name=\"amount\"]');\nconst btn = document.querySelector('button[type=submit]');\n\nlet delayInput;\nlet stepInput;\nlet amountInput;\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n\n  if (shouldResolve) {\n    promise.then(result => {\n      Notiflix.Notify.success(result);\n    });\n  } else {\n    promise.catch(error => {\n      Notiflix.Notify.failure(error);\n    });\n  }\n}\n\ndelay.addEventListener('input', e => {\n  delayInput = parseInt(e.target.value);\n});\nstep.addEventListener('input', e => {\n  stepInput = parseInt(e.target.value);\n});\namount.addEventListener('input', e => {\n  amountInput = parseInt(e.target.value);\n});\n\nbtn.addEventListener('click', e => {\n  e.preventDefault();\n  let timeDelay = delayInput;\n  for (let i = 1; i <= amountInput; i++) {\n    createPromise(i, timeDelay);\n    timeDelay += stepInput;\n  }\n});\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$delay","document","querySelector","$47d4ff9957288465$var$step","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$btn","$47d4ff9957288465$var$delayInput","$47d4ff9957288465$var$stepInput","$47d4ff9957288465$var$amountInput","$47d4ff9957288465$var$createPromise","position","delay1","shouldResolve","Math","random","promise","Promise","resolve","reject","setTimeout","then","result","$parcel$interopDefault","Notify","success","catch","error","failure","addEventListener","e","parseInt","target","value","preventDefault","timeDelay","i"],"version":3,"file":"03-promises.9fba0c37.js.map"}