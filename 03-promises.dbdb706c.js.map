{"mappings":"iiBAAA,IAOIA,EACAC,EACAC,EATJC,EAAAC,EAAA,SAEMC,EAAQC,SAASC,cAAc,uBAC/BC,EAAOF,SAASC,cAAc,sBAC9BE,EAASH,SAASC,cAAc,wBAChCG,EAAMJ,SAASC,cAAc,uBAMnC,SAASI,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAChCC,EAAU,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACLP,EACFK,EAAQ,qBAAoCG,OAAfV,EAAS,QAAYU,OAANT,EAAM,OAElDO,EAAO,oBAAmCE,OAAfV,EAAS,QAAYU,OAANT,EAAM,M,GAEjDA,E,IAGDC,EACFG,EAAQM,MAAK,SAAAC,GACXC,EAAAtB,GAASuB,OAAOC,QAAQH,E,IAG1BP,EAAQW,OAAM,SAAAC,GACZJ,EAAAtB,GAASuB,OAAOI,QAAQD,E,IAK9BxB,EAAM0B,iBAAiB,SAAS,SAAAC,GAC9BhC,EAAaiC,SAASD,EAAEE,OAAOC,M,IAEjC3B,EAAKuB,iBAAiB,SAAS,SAAAC,GAC7B/B,EAAYgC,SAASD,EAAEE,OAAOC,M,IAEhC1B,EAAOsB,iBAAiB,SAAS,SAAAC,GAC/B9B,EAAc+B,SAASD,EAAEE,OAAOC,M,IAGlCzB,EAAIqB,iBAAiB,SAAS,SAAAC,GAC5BA,EAAEI,iBAEF,IADA,IAAIC,EAAYrC,EACPsC,EAAI,EAAGA,GAAKpC,EAAaoC,IAChC3B,EAAc2B,EAAGD,GACjBA,GAAapC,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst delay = document.querySelector('input[name=\"delay\"]');\nconst step = document.querySelector('input[name=\"step\"]');\nconst amount = document.querySelector('input[name=\"amount\"]');\nconst btn = document.querySelector('button[type=submit]');\n\nlet delayInput;\nlet stepInput;\nlet amountInput;\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n\n  if (shouldResolve) {\n    promise.then(result => {\n      Notiflix.Notify.success(result);\n    });\n  } else {\n    promise.catch(error => {\n      Notiflix.Notify.failure(error);\n    });\n  }\n}\n\ndelay.addEventListener('input', e => {\n  delayInput = parseInt(e.target.value);\n});\nstep.addEventListener('input', e => {\n  stepInput = parseInt(e.target.value);\n});\namount.addEventListener('input', e => {\n  amountInput = parseInt(e.target.value);\n});\n\nbtn.addEventListener('click', e => {\n  e.preventDefault();\n  let timeDelay = delayInput;\n  for (let i = 1; i <= amountInput; i++) {\n    createPromise(i, timeDelay);\n    timeDelay += stepInput;\n  }\n});\n"],"names":["$ce04d3a99e08e73b$var$delayInput","$ce04d3a99e08e73b$var$stepInput","$ce04d3a99e08e73b$var$amountInput","$6JpON","parcelRequire","$ce04d3a99e08e73b$var$delay","document","querySelector","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$btn","$ce04d3a99e08e73b$var$createPromise","position","delay1","shouldResolve","Math","random","promise","Promise","resolve","reject","setTimeout","concat","then","result","$parcel$interopDefault","Notify","success","catch","error","failure","addEventListener","e","parseInt","target","value","preventDefault","timeDelay","i"],"version":3,"file":"03-promises.dbdb706c.js.map"}